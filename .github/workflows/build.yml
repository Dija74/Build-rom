name: Build Custom ROM

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      THREADS: $(nproc --all)

    steps:
    - name: Set up environment
      run: |
        sudo apt-get update
        sudo apt-get install -y openjdk-8-jdk python3 python3-venv git-core gnupg flex bison gperf build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z1-dev libgl1-mesa-dev libxml2-utils xsltproc unzip fontconfig
        
    - name: Check out repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: Initialize ROM manifest
      run: |
        mkdir -p ~/rom
        cd ~/rom
        repo init -u git://github.com/Just-CAF/platform_manifest.git -b r

    - name: Sync ROM source
      run: |
        cd ~/rom
        repo sync -c --no-tags --no-clone-bundle -j${{ env.THREADS }}

    - name: Clone Device Tree
      run: |
        cd ~/rom
        git clone -b lineage-17.1 https://github.com/whatawurst/android_device_sony_poplar.git device/sony/poplar

    - name: Clone Vendor Tree
      run: |
        cd ~/rom
        git clone -b lineage-17.1 https://github.com/whatawurst/android_vendor_sony_poplar.git vendor/sony/poplar

    - name: Clone Kernel Tree
      run: |
        cd ~/rom
        git clone -b lineage-17.1 https://github.com/whatawurst/android_kernel_sony_msm8998.git kernel/sony/msm8998

    - name: Set up build environment
      run: |
        cd ~/rom
        source build/envsetup.sh
        lunch lineage_poplar-userdebug

    - name: Build ROM
      run: |
        cd ~/rom
        make bacon -j${{ env.THREADS }}

    - name: Upload ROM
      uses: actions/upload-artifact@v2
      with:
        name: ROM
        path: ~/rom/out/target/product/poplar/*.zip
